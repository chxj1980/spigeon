#edit-mode: -*- python -*-
#coding:gbk

#工作路径.
WORKROOT('../../../../../../../')

#使用硬链接copy.
CopyUsingHardLink(True)

#C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"1.9.8.7\\\"')

#C编译参数.
CFLAGS('-g -ggdb -pipe -W -Wall')

#C++编译参数.
CXXFLAGS('-g -ggdb -pipe -W -Wall')

#IDL编译参数
IDLFLAGS('--compack')

#UBRPC编译参数
UBRPCFLAGS('--compack')

#头文件路径.
INCPATHS('. ../output/include ../gtest/include ../../src ../../deps/libev-4.11 ../lib/')

#使用库
#LIBS('./libbtest.a')
LIBS('../gtest/lib/gtest.a ../gtest/lib/gtest_main.a ../../deps/libev-4.11/.libs/libev.a ../../output/lib/libstoreframework.a')

#链接参数.
LDFLAGS('-lpthread -lcrypto -lrt')

#依赖模块
#CONFIGS('lib2/ullib')
CONFIGS('public/mcpack@mcpack_1-3-5-1_PD_BL')
CONFIGS('public/configure@configure_1-2-0-3_PD_BL')
CONFIGS('third-64/gtest')

test_sources=GLOB('../lib/mcpack_reader.cpp ../lib/mcpack_writer.cpp') + ' ' \
             #+ GLOB('../../src/util/*.cpp') + ' ' \
             #+ GLOB('../../src/event/*.cpp') + ' ' \

user_headers=''

#可执行文件
Application('test_replication',Sources('test_replication.cpp ' + test_sources))
Application('test_recovery',Sources('test_recovery.cpp ' + test_sources))
#静态库
#StaticLibrary('btest',Sources(user_sources),HeaderFiles(user_headers))
#共享库
#SharedLibrary('btest',Sources(user_sources),HeaderFiles(user_headers))
#子目录
#Directory('demo')

#TARGET('.run', ShellCommands('./test_RedisClient'), CleanCommands(''))
